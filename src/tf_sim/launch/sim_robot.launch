<launch>
	
	
	<arg name="prefix" default="robot_x" />
	<arg name="num" default = "-1"/>

	<param name="tf_prefix" value="$(arg prefix)" />
	<param name="rob_num" value="$(arg num)" />
	
  	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    		<rosparam file="$(find tf_sim)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    		<rosparam file="$(find tf_sim)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    		<rosparam file="$(find tf_sim)/config/local_costmap_params.yaml" command="load" />
    		<rosparam file="$(find tf_sim)/config/global_costmap_params.yaml" command="load" />
    		<rosparam file="$(find tf_sim)/config/base_local_planner_params.yaml" command="load" />
  	</node>

	<!-- Launch Localization -->
	<!--<node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false" output="screen">
		<param name="odom_frame_id" value="$(arg prefix)/odom" />
		<param name="base_frame_id" value="$(arg prefix)/base_link" />
	</node>-->
	
	<param name="use_sim_time" value="true" />

  	<node pkg="gmapping" type="slam_gmapping" name="gmapping" output="screen" >
		<param name="base_frame" value="$(arg prefix)/base_link"/>
		<param name="odom_frame" value="$(arg prefix)/odom"/>
		<param name="map_update_interval" value="0.5"/>
		<param name="linearUpdate" value="0.5"/>
		<param name="maxRange" value="10"/>
		<param name="maxUrange" value="5"/>

    		<remap from="scan" to="base_scan" />
    		<remap from="base_link" to="$(arg prefix)/base_link" />
    		<remap from="odom" to="$(arg prefix)/odom" />
  	</node>

	<node pkg="tf" type="static_transform_publisher" name="odom_to_map"
    		args="0 0  0 0 0 0  $(arg prefix)/map $(arg prefix)/odom 100" />


	<!--<node pkg="explore" type="explore" respawn="false" name="explore" output="screen" >
		<param name="potential_scale" value="0.005"/>	
    		<param name="orientation_scale" value="0.0"/>
    		<param name="gain_scale" value="1.0"/>
    		<param name="close_loops" value="true"/>
    		<remap from="slam_entropy" to="gmapping/entropy"/>
    		<remap from="base_scan" to="scan"/>
  	</node>-->
<!-- Set to your sensor's range -->
    <arg name="sensor_range" default="1.0"/>

    <node pkg="frontier_exploration" type="explore_client" name="explore_client" output="screen"/>

    <node pkg="frontier_exploration" type="explore_server" name="explore_server" output="screen" >

        <param name="frequency" type="double" value="2.0"/>
        <param name="goal_aliasing" type="double" value="$(arg sensor_range)"/>

        #All standard costmap_2d parameters as in move_base, other than BoundedExploreLayer
        <rosparam ns="explore_costmap" subst_value="true">
            footprint: [[0.1, 0.0], [0.0, 0.1], [0.0, -0.1], [-0.1, 0.0]]
            robot_radius: 0.10
            
            transform_tolerance: 0.5
            update_frequency: 5.0
            publish_frequency: 5.0

            #must match incoming static map
            global_frame: odom
            robot_base_frame: base_link
            resolution: 0.05

            rolling_window: false
            track_unknown_space: true

            plugins: 

                - {name: static,           type: "costmap_2d::StaticLayer"}            
                #- {name: explore_boundary, type: "frontier_exploration::BoundedExploreLayer"}
                #Can disable sensor layer if gmapping is fast enough to update scans
                - {name: sensor,           type: "costmap_2d::ObstacleLayer"}
                - {name: inflation,        type: "costmap_2d::InflationLayer"}

            static:
                #Can pull data from gmapping, map_server or a non-rolling costmap            
                map_topic: map
                # map_topic: move_base/global_costmap/costmap   
                subscribe_to_updates: true

            explore_boundary:
                resize_to_boundary: false
                frontier_travel_point: middle
                #set to false for gmapping, true if re-exploring a known area
                explore_clear_space: false

            sensor:
                observation_sources: laser
                laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true, raytrace_range: $(arg sensor_range), obstacle_range: $(arg sensor_range)}

            inflation:
                inflation_radius: 0.15
      </rosparam>
		
    </node>

</launch>
